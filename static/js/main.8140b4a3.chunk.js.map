{"version":3,"sources":["components/Layout.jsx","context/context.js","pages/Create.jsx","components/NoteCard.jsx","pages/Notes.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","page","width","padding","spacing","appbar","background","breakpoints","up","drawer","palette","action","toolbar","mixins","drawerPaper","active","appTitle","appIcon","paddingLeft","paddingTop","date","name","marginLeft","avatar","listText","Layout","children","classes","history","useHistory","location","useLocation","menuItems","id","text","icon","SubjectOutlined","color","path","AddCircleOutlineOutlined","className","AppBar","elevation","Toolbar","Typography","format","Date","Avatar","src","Drawer","variant","anchor","paper","component","List","map","item","ListItem","button","onClick","push","pathname","ListItemIcon","ListItemText","primary","AppContext","createContext","AppProvider","useState","notes","setNotes","Provider","value","addNote","title","details","category","getTime","toString","handleDelete","filter","note","useGlobalContext","useContext","field","marginTop","marginBottom","Create","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","Container","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","onChange","target","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","KeyboardArrowRight","card","backgroundColor","yellow","green","pink","blue","NoteCard","Card","CardHeader","toUpperCase","IconButton","DeleteOutlined","subheader","CardContent","varient","Notes","breakpointCols","default","columnClassName","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8140b4a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  makeStyles,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  AppBar,\r\n  Toolbar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\r\n\r\nimport ViewCompactIcon from \"@material-ui/icons/ViewCompact\";\r\n\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst drawerWidthLarge = 180;\r\nconst drawerWidthSmall = 75;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  page: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  appbar: {\r\n    background: \"#F8FAFD\",\r\n    width: `calc(100% - ${drawerWidthSmall}px)`,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidthLarge}px)`,\r\n    },\r\n  },\r\n  drawer: {\r\n    width: drawerWidthSmall,\r\n    background: theme.palette.action,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthLarge,\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    \r\n    background: \"#F8FAFD\",\r\n    width: drawerWidthSmall,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthLarge,\r\n    },\r\n  },\r\n  active: {\r\n    background: \"#fff\",\r\n  },\r\n  appTitle: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      padding: \"12px\",\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appIcon: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  date: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  name: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listText: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const menuItems = [\r\n    {\r\n      id: 1,\r\n      text: \"My Notes\",\r\n      icon: <SubjectOutlined color=\"secondary\" />,\r\n      path: \"/\",\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Create Note\",\r\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n      path: \"/create\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appbar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography className={classes.date} color='primary' >\r\n            Today is the {format(new Date(), \"do MMM Y\")}\r\n          </Typography>\r\n          <Typography className={classes.name} color='textSecondary' >Kamal-H</Typography>\r\n          <Avatar src=\"./avatar.jpg\" className={classes.avatar} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n      >\r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\" className={classes.appTitle}>\r\n            Note Plus\r\n          </Typography>\r\n          <ViewCompactIcon className={classes.appIcon} />\r\n        </div>\r\n        <List>\r\n          {menuItems.map((item) => (\r\n            <ListItem\r\n              key={item.id}\r\n              button\r\n              onClick={() => history.push(item.path)}\r\n              className={\r\n                item.path === location.pathname ? classes.active : null\r\n              }\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} className={classes.listText} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <div className={classes.page}>\r\n        <div className={classes.toolbar}></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  //? States\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  //? Handlers\r\n  const addNote = (title, details, category) => {\r\n    setNotes([\r\n      ...notes,\r\n      { id: new Date().getTime().toString(), title, details, category },\r\n    ]);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setNotes(notes.filter((note) => note.id !== id));\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{ addNote, handleDelete, notes }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n//? Custom Hook\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nconst Create = () => {\r\n  const classes = useStyles();\r\n\r\n  //? local States\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(false);\r\n  const [detailsError, setDetailsError] = useState(false);\r\n  const [category, setCategory] = useState(\"todos\");\r\n\r\n  const { addNote } = useGlobalContext();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setDetailsError(false);\r\n    setTitleError(false);\r\n\r\n    if (title === \"\") {\r\n      setTitleError(true);\r\n    }\r\n\r\n    if (details === \"\") {\r\n      setDetailsError(true);\r\n    }\r\n    if (title && details) {\r\n      addNote(title, details, category);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        variant=\"h6\"\r\n        component=\"h2\"\r\n        gutterBottom\r\n        color=\"textSecondary\"\r\n      >\r\n        Create a New Note\r\n      </Typography>\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className={classes.field}\r\n          label=\"Note Title\"\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          required\r\n          error={titleError}\r\n        />\r\n        <TextField\r\n          onChange={(e) => setDetails(e.target.value)}\r\n          className={classes.field}\r\n          label=\"Details\"\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          required\r\n          error={detailsError}\r\n        />\r\n\r\n        <FormControl className={classes.field} component=\"fieldset\">\r\n          <FormLabel>Note Category</FormLabel>\r\n          <RadioGroup\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <FormControlLabel\r\n              value=\"business\"\r\n              control={<Radio />}\r\n              label=\"Business\"\r\n            />\r\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\r\n            <FormControlLabel\r\n              value=\"reminders\"\r\n              control={<Radio />}\r\n              label=\"Reminders\"\r\n            />\r\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          endIcon={<KeyboardArrowRight />}\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    background: \"#bcbcbf2d\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: (note) => {\r\n      if (note.category === \"work\") {\r\n        return yellow[700];\r\n      }\r\n      if (note.category === \"business\") {\r\n        return green[500];\r\n      }\r\n      if (note.category === \"todos\") {\r\n        return pink[500];\r\n      }\r\n      return blue[500];\r\n    },\r\n  },\r\n});\r\n\r\nconst NoteCard = ({ note, handleDelete }) => {\r\n  const classes = useStyles(note);\r\n  return (\r\n    <div>\r\n      <Card elevation={0} className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar className={classes.avatar}>\r\n              {note.category[0].toUpperCase()}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton onClick={() => handleDelete(note.id)}>\r\n              <DeleteOutlined />\r\n            </IconButton>\r\n          }\r\n          title={note.title}\r\n          subheader={note.category}\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Typography varient=\"body1\" color=\"textSecondary\">\r\n            {note.details}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteCard;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nimport NoteCard from \"../components/NoteCard\";\r\n\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst Notes = () => {\r\n  const { notes, handleDelete } = useGlobalContext();\r\n\r\n  return (\r\n    <Container>\r\n      <Masonry\r\n        breakpointCols={{ default: 3, 1100: 2, 800: 1 }}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {notes.map((note) => (\r\n          <div item key={note.id}>\r\n            <NoteCard note={note} handleDelete={handleDelete} />\r\n          </div>\r\n        ))}\r\n      </Masonry>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Create from \"./pages/Create\";\nimport Notes from \"./pages/Notes\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact={true} component={Notes} />\n            <Route path=\"/create\" component={Create} />\n          </Switch>\n        </Layout>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { AppProvider } from \"./context/context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}